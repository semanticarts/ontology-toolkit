definitions:
  non_empty_string:
    type: string
    minLength: 1
  from_to:
    type: object
    properties:
      from:
        $ref: '#/definitions/non_empty_string'
      to:
        $ref: '#/definitions/non_empty_string'
    required:
      - from
      - to
    additionalProperties: false
  onto_version:
    type: object
    properties:
      iri:
        $ref: '#/definitions/non_empty_string'
      version:
        $ref: '#/definitions/non_empty_string'
    required:
      - iri
      - version
    additionalProperties: false
  include_list:
    type: array
    items:
      $ref: '#/definitions/non_empty_string'
    minLength: 1
  bulk_file_operation:
    properties:
      source:
        $ref: '#/definitions/non_empty_string'
      target:
        $ref: '#/definitions/non_empty_string'
      rename:
        $ref: '#/definitions/from_to'
      replace:
        $ref: '#/definitions/from_to'
      includes:
        $ref: '#/definitions/include_list'
    required:
      - source
      - target
  multi_query_spec:
    oneOf:
      - properties:
          query:
            $ref: '#/definitions/non_empty_string'
        required:
          - query
      - properties:
          queries:
            type: object
            properties:
              source:
                $ref: '#/definitions/non_empty_string'
              includes:
                $ref: '#/definitions/include_list'
            required:
              - source
        required:
          - queries
type: object
required:
  - bundle
  - actions
properties:
  bundle:
    type: string
    minLength: 1
  variables:
    type: object
    additionalProperties:
      type: string
  tools:
    type: array
    items:
      type: object
      required:
        - name
        - type
      properties:
        name:
          $ref: '#/definitions/non_empty_string'
        type:
          type: string
          enum:
            - Java
            - sparql
            - shell
      allOf:
        - if:
            properties:
              type:
                const: Java
          then:
            properties:
              jar:
                $ref: '#/definitions/non_empty_string'
              arguments:
                type: array
                items:
                  type: string
                minLength: 2
            required:
              - jar
              - arguments
        - if:
            properties:
              type:
                const: shell
          then:
            properties:
              arguments:
                type: array
                items:
                  type: string
                minLength: 2
            required:
              - arguments
        - if:
            properties:
              type:
                const: sparql
          then:
            allOf:
              - $ref: '#/definitions/multi_query_spec'
              - properties:
                  format:
                    type: string
                    enum:
                      - turtle
                      - xml
                      - nt
  actions:
    type: array
    items:
      type: object
      required:
        - action
      properties:
        action:
          type: string
          enum:
            - mkdir
            - copy
            - move
            - transform
            - markdown
            - graph
            - definedBy
            - export
            - sparql
            - verify
        message:
          $ref: '#/definitions/non_empty_string'
      allOf:
        - if:
            properties:
              action:
                const: verify
          then:
            properties:
              source:
                $ref: '#/definitions/non_empty_string'
              includes:
                $ref: '#/definitions/include_list'
              type:
                type: string
                enum:
                  - shacl
                  - ask
                  - select
                  - construct
            allOf:
              - if:
                  properties:
                    type:
                      const: ask
                then:
                  allOf:
                    - $ref: '#/definitions/multi_query_spec'
                    - properties:
                        stopOnFail:
                          type: boolean
                        expected:
                          type: boolean
                      required:
                        - expected
              - if:
                  properties:
                    type:
                      const: select
                then:
                  allOf:
                    - $ref: '#/definitions/multi_query_spec'
                    - properties:
                        stopOnFail:
                          type: boolean
                        target:
                          $ref: '#/definitions/non_empty_string'
              - if:
                  properties:
                    type:
                      const: construct
                then:
                  allOf:
                    - $ref: '#/definitions/multi_query_spec'
                    - properties:
                        stopOnFail:
                          type: boolean
                        failOn:
                          type: string
                          enum:
                            - "warning"
                            - "violation"
                        target:
                          $ref: '#/definitions/non_empty_string'
              - if:
                  properties:
                    type:
                      const: shacl
                then:
                  properties:
                    target:
                      $ref: '#/definitions/non_empty_string'
                    inference:
                      type: string
                      enum:
                        - "rdfs"
                        - "owlrl"
                        - "both"
                        - "none"
                    failOn:
                      type: string
                      enum:
                        - "warning"
                        - "violation"
                    shapes:
                      type: object
                      properties:
                        source:
                          $ref: '#/definitions/non_empty_string'
                        includes:
                          $ref: '#/definitions/include_list'
                  required:
                    - shapes
            required:
              - type
              - source
        - if:
            properties:
              action:
                const: sparql
          then:
            properties:
              source:
                $ref: '#/definitions/non_empty_string'
              target:
                $ref: '#/definitions/non_empty_string'
              includes:
                $ref: '#/definitions/include_list'
              query:
                $ref: '#/definitions/non_empty_string'
              format:
                type: string
                enum:
                  - turtle
                  - xml
                  - nt
            required:
              - query
              - source
              - target
        - if:
            properties:
              action:
                const: graph
          then:
            properties:
              source:
                $ref: '#/definitions/non_empty_string'
              target:
                $ref: '#/definitions/non_empty_string'
              version:
                $ref: '#/definitions/non_empty_string'
              title:
                $ref: '#/definitions/non_empty_string'
            required:
              - title
              - version
              - source
              - target
        - if:
            properties:
              action:
                const: markdown
          then:
            properties:
              source:
                $ref: '#/definitions/non_empty_string'
              target:
                $ref: '#/definitions/non_empty_string'
            required:
              - source
              - target
        - if:
            properties:
              action:
                const: mkdir
          then:
            properties:
              directory:
                $ref: '#/definitions/non_empty_string'
            required:
              - directory
        - if:
            properties:
              action:
                const: copy
          then:
            $ref: '#/definitions/bulk_file_operation'
        - if:
            properties:
              action:
                const: move
          then:
            $ref: '#/definitions/bulk_file_operation'
        - if:
            properties:
              action:
                const: definedBy
          then:
            allOf:
              - $ref: '#/definitions/bulk_file_operation'
              - properties:
                  retainDefinedBy:
                    type: boolean
                  versionedDefinedBy:
                    type: boolean
        - if:
            properties:
              action:
                const: export
          then:
            allOf:
              - $ref: '#/definitions/bulk_file_operation'
              - properties:
                  merge:
                    $ref: '#/definitions/onto_version'
                  context:
                    $ref: '#/definitions/non_empty_string'
                  definedBy:
                    type: string
                    enum:
                      - strict
                      - all
                  retainDefinedBy:
                    type: boolean
                  versionedDefinedBy:
                    type: boolean
                  stripVersions:
                    type: boolean
                  compress:
                    type: boolean
                  format:
                    type: string
                    enum:
                      - turtle
                      - xml
                      - nt
        - if:
            properties:
              action:
                const: transform
          then:
            allOf:
              - $ref: '#/definitions/bulk_file_operation'
              - properties:
                  tool:
                    $ref: '#/definitions/non_empty_string'
                required:
                  - tool
